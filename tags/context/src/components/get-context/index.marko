import { getProvider } from '../../helpers'

class {
  sync(state) {
    this.setState(state);
    this.update();
  }
  onCreate() {
    this.sync = this.sync.bind(this);
  }
  onInput(input, out) {
    var from = input.__from;

    if (!from || !from.render) {
      throw new Error(
        "Invalid component constructor provided as <context> 'from' attribute. Got: " +
          from
      );
    }

    var provider = getProvider(out, from);
    this.state = provider ? provider.data : {};

    if (typeof window !== "undefined") {
      this.sub && this.sub.removeAllListeners();

      if (provider) {
        this.sub = this.subscribeTo(provider).on("__change", this.sync);
        this.emitToProvider = provider.emit.bind(provider);
      } else {
        this.sub = this.emitToProvider = undefined;
      }
    }
  }
}

<${input.renderBody}(state, component.emitToProvider)/>
